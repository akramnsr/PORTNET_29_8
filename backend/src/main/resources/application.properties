spring.application.name=portnet_back
spring.docker.compose.enabled=false

spring.datasource.url=jdbc:postgresql://localhost:5432/portnet
spring.datasource.username=postgres
spring.datasource.password=sab

spring.autoconfigure.exclude=org.springframework.modulith.events.jpa.JpaEventPublicationAutoConfiguration
spring.jpa.show-sql=true
spring.session.jdbc.initialize-schema=always

# Configuration des tâches asynchrones
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=100

# Cache
spring.cache.type=simple
spring.cache.cache-names=agents,anomalies,logs

# Mail (?? utilisez des variables d'environnement en prod)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:sabrenalakehal12@gmail.com}
spring.mail.password=${MAIL_PASSWORD:changeme}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.from=${MAIL_FROM:sabrenalakehal12@gmail.com}

# AWS S3 (?? utilisez des variables d'environnement en prod)
aws.s3.bucket.name=portnet-documents
aws.s3.region=eu-north-1
aws.access.key.id=${AWS_ACCESS_KEY_ID:changeme}
aws.secret.access.key=${AWS_SECRET_ACCESS_KEY:changeme}

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# (facultatif, utilisateur en mémoire pour tests basiques)
spring.security.user.name=admin
spring.security.user.password=admin123
spring.security.user.roles=ADMIN

jwt.secret=${JWT_SECRET:une-cle-secrete-au-moins-32-caracteres-pour-hmac}

# Chemin local de stockage
app.upload.dir=C:/Users/hp/Desktop/portnet/documentdouanier

spring.jpa.open-in-view=false
server.port=8080

dispatcher.base-url=http://127.0.0.1:5003
dispatcher.path=/dispatcher
dispatcher.key=dev-key
dispatcher.timeout-ms=8000


